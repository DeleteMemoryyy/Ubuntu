/* 刘德欣  1500017704 */

8.16:
    输出：
    counter = 2

    因子进程和父进程是不同的两个进程，不共用全局变量，子进程中执行counter--不会影响到父进程中counter的值。

8.21:
    可能的输出：
    abc 或 bac

    父进程在输出'b'后执行waitpid，因此在子进程退出之后才会进行输出'c'，即'c'需要在'a'、'b'之后输出。

8.25：
    char *tfgets(char *buf, int bufsize, FILE *stream)
    {
        Signal(SIGALRM,handler_alrm);

        /* 设置闹钟 */
        Alarm(5);

        /* 应用sigsetjmp实现SIGALRM信号到达时的非本地跳转 */
        if(sigsetjmp(env,1) == 0)
            /* 信号未到达时执行原本的fgets函数 */
            return fgets(buf,bufsize,stream);
        else
            /* 信号到达时，sigsetjmp函数返回值为1，tfgets函数返回NULL */
            return NULL;
    }

    需要额外定义的函数和全局变量（在tfgets函数之前）：

    static sigjmp_buf env;

    void handler_alrm(int sig)
    {
        siglongjmp(env,1);
    }